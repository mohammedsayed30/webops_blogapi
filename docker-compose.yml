version: '3.8'

services:
  db:
    image: postgres:17
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Rails15
      POSTGRES_DB: blogapi_development 
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      target: base  # Use development target
    environment:
      RAILS_ENV: development
      BUNDLE_PATH: /usr/local/bundle
      DATABASE_URL: postgres://postgres:Rails15@db:5432/blogapi_development
      REDIS_URL: redis://redis:6379/0
      RAILS_MASTER_KEY: ${RAILS_MASTER_KEY}
    volumes:
      - .:/rails
      - bundle_cache:/usr/local/bundle
      - storage:/rails/storage
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command:  bash -c " sleep 5 && bundle exec rails db:create db:migrate &&bundle exec rails server -b 0.0.0.0"

  sidekiq:
    build: .
    environment:
      RAILS_ENV: development
      DATABASE_URL: postgres://postgres:Rails15@db:5432
      REDIS_URL: redis://redis:6379/0
      RAILS_MASTER_KEY: ${RAILS_MASTER_KEY}
    volumes:
      - .:/rails
      - bundle_cache:/usr/local/bundle
    depends_on:
      - db
      - redis
    command: bundle exec sidekiq

  test:
    build: .
    environment:
      RAILS_ENV: test
      DB_HOST: db_test
      DB_USERNAME: postgres
      DB_PASSWORD: Rails15
      DB_NAME: blogapi_test
      DB_PORT: 5432
      REDIS_URL: redis://redis_test:6379/0
    depends_on:
      db_test:
        condition: service_healthy
      redis_test:
        condition: service_started
    command: >
      bash -c "
        echo 'Waiting for database...' &&
        until PGPASSWORD=Rails15 psql -h db_test -U postgres -d postgres -c 'SELECT 1' > /dev/null 2>&1; do
          echo 'Waiting for database to be ready...' &&
          sleep 2
        done &&
        echo 'Database is ready!' &&
        bundle exec rails db:create db:migrate &&
        echo 'Running tests...' &&
        bundle exec rspec
      "

  db_test:
    image: postgres:17
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Rails15
      POSTGRES_DB: blogapi_test
    volumes:
      - test_postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis_test:
    image: redis:7
    volumes:
      - test_redis_data:/data


  



volumes:
  postgres_data:
  redis_data:
  test_postgres_data:
  test_redis_data:
  bundle_cache:
  storage:











#     test:
#     build: .
#     environment:
#       RAILS_ENV: test
#       DATABASE_URL: postgres://postgres:Rails15@db_test:5432/blogapi_test
#       REDIS_URL: redis://redis_test:6379/0
#     depends_on:
#       - db_test
#       - redis_test
#     command: bash -c "sleep 5 && bundle exec rails db:create db:migrate && bundle exec rspec"
# #sleep 5 to wait for db_test to be ready
#   db_test:
#     image: postgres:17
#     environment:
#       POSTGRES_USER: postgres
#       POSTGRES_PASSWORD: Rails15
#       POSTGRES_DB: blogapi_test
#     volumes:
#       - test_postgres_data:/var/lib/postgresql/data

#   redis_test:
#     image: redis:7
#     volumes:
#       - test_redis_data:/data